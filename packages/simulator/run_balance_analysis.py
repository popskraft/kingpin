#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –±–∞–ª–∞–Ω—Å–∞ –∫–∞—Ä—Ç Kingpin
"""

import os
import sys
from balance_analyzer import BalanceAnalyzer

def main():
    # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å –∫–∞—Ä—Ç–∞–º–∏
    cards_file = os.path.join(os.path.dirname(__file__), '..', '..', 'config', 'cards.csv')
    
    if not os.path.exists(cards_file):
        print(f"–û—à–∏–±–∫–∞: —Ñ–∞–π–ª {cards_file} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        sys.exit(1)
    
    print("üéØ –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞ –±–∞–ª–∞–Ω—Å–∞ –∫–∞—Ä—Ç Kingpin...")
    print(f"üìÅ –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑: {cards_file}")
    
    # –°–æ–∑–¥–∞–µ–º –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä
    analyzer = BalanceAnalyzer(cards_file)
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
    print("üìä –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç –ø–æ –±–∞–ª–∞–Ω—Å—É...")
    report = analyzer.generate_balance_report()
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç—á–µ—Ç
    report_file = os.path.join(os.path.dirname(__file__), '..', '..', 'docs', 'balance_report.md')
    with open(report_file, 'w', encoding='utf-8') as f:
        f.write(report)
    
    print(f"‚úÖ –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: {report_file}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ø –∏ —Ö—É–¥—à–∏–µ –∫–∞—Ä—Ç—ã
    print("\nüèÜ –¢–û–ü-5 –°–ê–ú–´–• –°–ò–õ–¨–ù–´–• –ö–ê–†–¢:")
    top_cards = analyzer.get_top_cards_by_rating(5)
    for i, (card, rating) in enumerate(top_cards, 1):
        print(f"{i}. {card.name} ({getattr(card, 'clan', '')}) - {rating:.2f}")
    
    print("\n‚ö†Ô∏è –¢–û–ü-5 –°–ê–ú–´–• –°–õ–ê–ë–´–• –ö–ê–†–¢:")
    weak_cards = analyzer.get_weakest_cards(5)
    for i, (card, rating) in enumerate(weak_cards, 1):
        print(f"{i}. {card.name} ({getattr(card, 'clan', '')}) - {rating:.2f}")
    
    print(f"\nüìñ –ü–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –≤ —Ñ–∞–π–ª–µ: {report_file}")

if __name__ == "__main__":
    main()
